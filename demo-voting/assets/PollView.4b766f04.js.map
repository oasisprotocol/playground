{"version":3,"file":"PollView.4b766f04.js","sources":["../../src/components/CheckedIcon.vue","../../src/components/UncheckedIcon.vue","../../src/views/PollView.vue"],"sourcesContent":["<template>\n  <svg width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_56_971)\">\n      <path\n        d=\"M12 7.1333C9.24 7.1333 7 9.3733 7 12.1333C7 14.8933 9.24 17.1333 12 17.1333C14.76 17.1333 17 14.8933 17 12.1333C17 9.3733 14.76 7.1333 12 7.1333ZM12 2.1333C6.48 2.1333 2 6.6133 2 12.1333C2 17.6533 6.48 22.1333 12 22.1333C17.52 22.1333 22 17.6533 22 12.1333C22 6.6133 17.52 2.1333 12 2.1333ZM12 20.1333C7.58 20.1333 4 16.5533 4 12.1333C4 7.7133 7.58 4.1333 12 4.1333C16.42 4.1333 20 7.7133 20 12.1333C20 16.5533 16.42 20.1333 12 20.1333Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_56_971\">\n        <rect width=\"24\" height=\"24\" fill=\"white\" transform=\"translate(0 0.133301)\" />\n      </clipPath>\n    </defs>\n  </svg>\n</template>\n\n<script setup lang=\"ts\"></script>\n\n<style scoped lang=\"postcss\"></style>\n","<template>\n  <svg width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_56_273)\">\n      <path d=\"M12 2.1333C6.48 2.1333 2 6.6133 2 12.1333C2 17.6533 6.48 22.1333 12 22.1333C17.52 22.1333 22 17.6533 22 12.1333C22 6.6133 17.52 2.1333 12 2.1333ZM12 20.1333C7.58 20.1333 4 16.5533 4 12.1333C4 7.7133 7.58 4.1333 12 4.1333C16.42 4.1333 20 7.7133 20 12.1333C20 16.5533 16.42 20.1333 12 20.1333Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_56_273\">\n        <rect width=\"24\" height=\"24\" fill=\"white\" transform=\"translate(0 0.133301)\"/>\n      </clipPath>\n    </defs>\n  </svg>\n</template>\n\n<script setup lang=\"ts\"></script>\n\n<style scoped lang=\"postcss\"></style>\n","<script setup lang=\"ts\">\nimport { BigNumber, ethers } from 'ethers';\nimport { computed, onMounted, ref } from 'vue';\n\nimport type { Poll } from '../../../functions/api/types';\nimport type { DAOv1 } from '../contracts';\nimport { staticDAOv1, useUnwrappedPollACLv1, useUnwrappedDAOv1, useDAOv1, useGaslessVoting, useUnwrappedGaslessVoting } from '../contracts';\nimport { Network, useEthereumStore } from '../stores/ethereum';\nimport AppButton from '@/components/AppButton.vue';\nimport AppBadge from '@/components/AppBadge.vue';\nimport CheckedIcon from '@/components/CheckedIcon.vue';\nimport UncheckedIcon from '@/components/UncheckedIcon.vue';\nimport SuccessInfo from '@/components/SuccessInfo.vue';\nimport CheckIcon from '@/components/CheckIcon.vue';\nimport PollDetailsLoader from '@/components/PollDetailsLoader.vue';\n\nconst props = defineProps<{ id: string }>();\nconst proposalId = `0x${props.id}`;\n\nconst dao = useDAOv1();\nconst uwdao = useUnwrappedDAOv1();\nconst eth = useEthereumStore();\nconst gaslessVoting = useGaslessVoting();\nconst unwrappedGaslessVoting = useUnwrappedGaslessVoting();\n\nconst error = ref('');\nconst isLoading = ref(false);\nconst hasVoted = ref(false);\nconst poll = ref<DAOv1.ProposalWithIdStructOutput & { ipfsParams: Poll }>();\nconst winningChoice = ref<number | undefined>(undefined);\nconst selectedChoice = ref<number | undefined>();\nconst existingVote = ref<number | undefined>(undefined);\nlet canClosePoll = ref<Boolean>(false);\nlet canAclVote = ref<Boolean>(false);\n\n(async () => {\n  const [active, params, topChoice] = await uwdao.value.callStatic.proposals(proposalId);\n  const proposal = { id: proposalId, active, topChoice, params };\n  const ipfsParamsRes = await fetch(`https://w3s.link/ipfs/${params.ipfsHash}`);\n  const ipfsParams = await ipfsParamsRes.json();\n  // TODO: redirect to 404\n  poll.value = { proposal, ipfsParams } as any;\n  if (!proposal.active) {\n    selectedChoice.value = winningChoice.value = proposal.topChoice;\n  }\n\n  const acl = await useUnwrappedPollACLv1();\n  const userAddress = eth.signer ? await eth.signer.getAddress() : ethers.constants.AddressZero;\n  canClosePoll.value = await acl.value.callStatic.canManagePoll(\n    dao.value.address,\n    proposalId,\n    userAddress,\n  );\n  canAclVote.value = await acl.value.callStatic.canVoteOnPoll(\n    dao.value.address,\n    proposalId,\n    userAddress,\n  );\n})();\n\nconst canVote = computed(() => {\n  if (!eth.address) return false;\n  if (winningChoice.value !== undefined) return false;\n  if (selectedChoice.value === undefined) return false;\n  if (existingVote.value !== undefined) return false;\n  return canAclVote.value != false;\n});\n\nconst canSelect = computed(() => {\n  if (winningChoice.value !== undefined) return false;\n  if (eth.address === undefined) return true;\n  return existingVote.value === undefined;\n});\n\nasync function closeBallot(): Promise<void> {\n  await eth.connect();\n  await eth.switchNetwork(Network.FromConfig);\n  const tx = await dao.value.closeProposal(proposalId);\n  const receipt = await tx.wait();\n\n  if (receipt.status != 1) throw new Error('close ballot tx failed');\n}\n\nasync function vote(e: Event): Promise<void> {\n  e.preventDefault();\n  try {\n    error.value = '';\n    isLoading.value = true;\n    await doVote();\n    hasVoted.value = true;\n  } catch (e: any) {\n    error.value = e.reason ?? e.message;\n  } finally {\n    isLoading.value = false;\n  }\n}\n\nasync function doVote(): Promise<void> {\n  await eth.connect();\n\n  if (selectedChoice.value === undefined) throw new Error('no choice selected');\n\n  const choice = selectedChoice.value;\n\n  const gv = (await gaslessVoting).value;\n  const ugv = (await unwrappedGaslessVoting).value;\n\n  if( gv && ugv ) {\n    console.log('doVote: using gasless voting');\n\n    if( ! eth.signer ) {\n      throw new Error('No signer!');\n    }\n\n    const request = {\n        voter: await gv.signer.getAddress(),\n        proposalId: proposalId,\n        choiceId: choice\n    };\n\n    // Sign voting request\n    const signature = await eth.signer._signTypedData({\n      name: \"DAOv1.GaslessVoting\",\n      version: \"1\",\n      chainId: import.meta.env.VITE_NETWORK,\n      verifyingContract: gv.address\n    }, {\n      VotingRequest: [\n        { name: 'voter', type: \"address\" },\n        { name: 'proposalId', type: 'bytes32' },\n        { name: 'choiceId', type: 'uint256' }\n      ]\n    }, request);\n    const rsv = ethers.utils.splitSignature(signature);\n\n    // Submit voting request to get signed transaction\n    const gasPrice = await uwdao.value.provider.getGasPrice();\n    console.log('doVote.gasless: constructing tx', 'gasPrice', gasPrice);\n    const tx = await ugv.makeVoteTransaction(gasPrice, request, rsv);\n\n    // Submit signed transaction via plain JSON-RPC provider (avoiding saphire.wrap)\n    let plain_resp = await eth.unwrappedProvider.sendTransaction(tx);\n    console.log('doVote.gasless: waiting for tx', plain_resp.hash);\n    const receipt = await ugv.provider.waitForTransaction(plain_resp.hash)\n\n    if (receipt.status != 1) throw new Error('cast vote tx failed');\n\n    console.log('doVote.gasless: success');\n  }\n  else {\n    console.log('doVote: casting vote using normal tx');\n    await eth.switchNetwork(Network.FromConfig);\n    const tx = await dao.value.castVote(proposalId, choice);\n    const receipt = await tx.wait();\n\n    if (receipt.status != 1) throw new Error('cast vote tx failed');\n  }\n\n  existingVote.value = choice;\n}\n\nonMounted(() => {\n  eth.connect();\n});\n</script>\n\n<template>\n  <section v-if=\"!hasVoted\">\n    <div v-if=\"poll\">\n      <div class=\"flex justify-between items-center mb-4\">\n        <h2 class=\"capitalize text-white text-2xl font-bold\">{{ poll.ipfsParams.name }}</h2>\n        <AppBadge :variant=\"poll.proposal.active ? 'active' : 'closed'\">\n          {{ poll.proposal.active ? 'Active' : 'Closed' }}\n        </AppBadge>\n      </div>\n      <p class=\"text-white text-base mb-20\">{{ poll.ipfsParams.description }}</p>\n      <div v-if=\"poll.proposal.active && canClosePoll\" class=\"flex justify-end mb-6\">\n        <AppButton variant=\"secondary\" @click=\"closeBallot\">Close poll</AppButton>\n      </div>\n      <p v-if=\"poll.proposal.active\" class=\"text-white text-base mb-10\">\n        Please choose your anwer below:\n      </p>\n      <form @submit=\"vote\">\n        <div v-if=\"poll?.ipfsParams.choices\">\n          <AppButton\n            v-for=\"(choice, choiceId) in poll.ipfsParams.choices\"\n            :key=\"choiceId\"\n            :class=\"{\n              selected: selectedChoice === choiceId || choiceId === winningChoice,\n              'pointer-events-none': isLoading || !poll.proposal.active,\n            }\"\n            class=\"choice-btn mb-2 w-full\"\n            variant=\"choice\"\n            @click=\"selectedChoice = choiceId\"\n            :disabled=\"!canSelect && winningChoice !== undefined && choiceId !== winningChoice\"\n          >\n            <span class=\"flex gap-2\">\n              <CheckedIcon v-if=\"selectedChoice === choiceId || choiceId === winningChoice\" />\n              <UncheckedIcon v-else />\n              <span class=\"leading-6\">{{ choice }}</span>\n            </span>\n          </AppButton>\n        </div>\n        <p v-if=\"poll?.ipfsParams.options.publishVotes\" class=\"text-white text-base mt-10\">\n          Votes will be made public after voting has ended.\n        </p>\n        <AppButton\n          v-if=\"poll?.proposal?.active\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mt-14\"\n          :disabled=\"!canVote || isLoading\"\n          @click=\"vote\"\n        >\n          <span v-if=\"isLoading\">Submitting Voteâ€¦</span>\n          <span v-else-if=\"!isLoading\">Submit vote</span>\n        </AppButton>\n        <p v-if=\"error\" class=\"error mt-2 text-center\">\n          <span class=\"font-bold\">{{ error }}</span>\n        </p>\n      </form>\n    </div>\n\n    <PollDetailsLoader v-else />\n  </section>\n  <section v-else>\n    <SuccessInfo>\n      <h3 class=\"text-white text-3xl mb-4\">Thank you</h3>\n      <p class=\"text-white text-base mb-4\">Your vote has been recorded.</p>\n\n      <AppButton\n        v-if=\"poll?.ipfsParams?.choices && selectedChoice\"\n        class=\"mb-4 pointer-events-none cursor-not-allowed w-full voted\"\n        variant=\"choice\"\n      >\n        <span class=\"flex gap-2\">\n          <CheckIcon class=\"w-7\" />\n          {{ poll.ipfsParams.choices[selectedChoice] }}\n        </span>\n      </AppButton>\n\n      <p class=\"text-white text-base mb-24\">Your vote will be published after voting has ended.</p>\n\n      <RouterLink to=\"/\">\n        <AppButton variant=\"secondary\">Go to overview</AppButton>\n      </RouterLink>\n    </SuccessInfo>\n  </section>\n</template>\n\n<style lang=\"postcss\" scoped>\n.error {\n  @apply text-red-500;\n}\n</style>\n"],"names":["_hoisted_1","_createElementVNode","_hoisted_4","_hoisted_2","_sfc_render","_ctx","_cache","proposalId","dao","useDAOv1","uwdao","useUnwrappedDAOv1","eth","useEthereumStore","gaslessVoting","useGaslessVoting","unwrappedGaslessVoting","useUnwrappedGaslessVoting","error","ref","isLoading","hasVoted","poll","winningChoice","selectedChoice","existingVote","canClosePoll","canAclVote","active","params","topChoice","proposal","ipfsParams","acl","useUnwrappedPollACLv1","userAddress","ethers.constants.AddressZero","canVote","computed","canSelect","closeBallot","Network","vote","e","doVote","choice","gv","ugv","request","signature","rsv","ethers.utils.splitSignature","gasPrice","tx","plain_resp","onMounted"],"mappings":"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"}