{"version":3,"file":"CreatePollView.7440dbb2.js","sources":["../../src/components/RemoveIcon.vue","../../src/components/AddIcon.vue","../../src/utils/pinata-api.ts","../../src/utils/promise.ts","../../src/views/CreatePollView.vue"],"sourcesContent":["<template>\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM17 13H7V11H17V13Z\"\n      fill=\"#565B61\"\n    />\n  </svg>\n</template>\n\n<script setup lang=\"ts\"></script>\n\n<style scoped lang=\"postcss\"></style>\n","<template>\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_56_1176)\">\n      <path d=\"M13 7H11V11H7V13H11V17H13V13H17V11H13V7ZM12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z\" fill=\"currentColor\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_56_1176\">\n        <rect width=\"24\" height=\"24\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n</template>\n\n<script setup lang=\"ts\"></script>\n\n<style scoped lang=\"postcss\"></style>\n","import type { Poll } from '../../../functions/api/types';\n\nexport abstract class PinataApi {\n  static JWT_TOKEN = import.meta.env.VITE_PINATA_JWT;\n\n  static pinBody = async (poll: Poll) => {\n    const body = JSON.stringify({\n      pinataContent: poll,\n    });\n\n    const res = await fetch('https://api.pinata.cloud/pinning/pinJSONToIPFS', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${PinataApi.JWT_TOKEN}`,\n      },\n      body,\n    });\n    const resBody = await res.json();\n    if (res.status !== 200) throw new Error('failed to pin');\n    const resp = { ipfsHash: resBody.IpfsHash };\n    return new Response(JSON.stringify(resp), {\n      status: 201,\n      headers: { 'content-type': 'application/json' },\n    });\n  };\n}\n","function rejectDelay(reason: string) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(reject.bind(null, reason), 5000);\n  });\n}\n\nexport async function retry<T extends Promise<any>>(\n  attempt: T,\n  tryCb: (value: Awaited<T>) => void = () => {},\n  maxAttempts = 10,\n): Promise<Awaited<T>> {\n  let p: Promise<Awaited<typeof attempt>> = Promise.reject();\n\n  for (let i = 0; i < maxAttempts; i++) {\n    p = p\n      .catch(() => attempt)\n      .then((value) => {\n        return tryCb(value);\n      })\n      .catch(rejectDelay) as Promise<Awaited<typeof attempt>>;\n  }\n\n  return p;\n}\n","<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue';\n\nimport {\n  useDAOv1,\n  useGaslessVoting,\n  useUnwrappedDAOv1,\n  useUnwrappedGaslessVoting,\n} from '../contracts';\nimport { Network, useEthereumStore } from '../stores/ethereum';\nimport type { Poll } from '../../../functions/api/types';\nimport AppButton from '@/components/AppButton.vue';\nimport RemoveIcon from '@/components/RemoveIcon.vue';\nimport AddIcon from '@/components/AddIcon.vue';\nimport SuccessInfo from '@/components/SuccessInfo.vue';\nimport { PinataApi } from '@/utils/pinata-api';\nimport { retry } from '@/utils/promise';\n\nconst eth = useEthereumStore();\nconst dao = useDAOv1();\nconst uwdao = useUnwrappedDAOv1();\nconst gaslessVoting = useGaslessVoting();\nconst unwrappedGaslessVoting = useUnwrappedGaslessVoting();\n\nconst errors = ref<string[]>([]);\nconst pollName = ref('');\nconst pollDesc = ref('');\nconst choices = ref<Array<{ key: number; value: string }>>(\n  Array.from({ length: 3 }, (_, key) => ({\n    key,\n    value: '',\n  })),\n);\nconst publishVotes = ref(false);\nconst isLoading = ref(false);\nconst proposalId = ref('');\n\nlet choiceCount = 3;\nconst removeChoice = (i: number) => choices.value.splice(i, 1);\nconst addChoice = () => {\n  choices.value.push({ key: choiceCount, value: '' });\n  choiceCount++;\n};\n\nasync function createPoll(e: Event): Promise<void> {\n  if (e.target instanceof HTMLFormElement) {\n    e.target.checkValidity();\n    if (!e.target.reportValidity()) return;\n  }\n  e.preventDefault();\n  try {\n    errors.value.splice(0, errors.value.length);\n    isLoading.value = true;\n    proposalId.value = await doCreatePoll();\n  } catch (e: any) {\n    errors.value.push(`Failed to create poll: ${e.message ?? JSON.stringify(e)}`);\n    console.error(e);\n  } finally {\n    isLoading.value = false;\n  }\n}\n\nasync function doCreatePoll(): Promise<string> {\n  if (errors.value.length > 0) return '';\n\n  const poll: Poll = {\n    creator: eth.address!,\n    name: pollName.value,\n    description: pollDesc.value,\n    choices: choices.value.map((c) => c.value),\n    options: {\n      publishVotes: publishVotes.value,\n    },\n  };\n\n  const res = await PinataApi.pinBody(poll);\n  const resJson = await res.json();\n  if (res.status !== 201) throw new Error(resJson.error);\n  const ipfsHash = resJson.ipfsHash;\n\n  const proposalParams = {\n    ipfsHash,\n    numChoices: choices.value.length,\n    publishVotes: poll.options.publishVotes,\n  };\n\n  let proposalId: string;\n\n  const gv = (await gaslessVoting).value;\n  const ugv = (await unwrappedGaslessVoting).value;\n\n  console.log('doCreatePoll: Using direct transaction to create proposal');\n\n  // TODO: check if proposal already exists on the host chain and continue if so (idempotence)\n  //proposalId = await dao.value.callStatic.createProposal(proposalParams);\n  //console.log('doCreatePoll: creating proposal', proposalId);\n\n  const createProposalTx = await dao.value.createProposal(proposalParams);\n  console.log('doCreatePoll: creating proposal tx', createProposalTx.hash);\n\n  const receipt = await createProposalTx.wait();\n  if (receipt.status !== 1) {\n    throw new Error('createProposal tx receipt reported failure.');\n  }\n  proposalId = receipt.logs[0].data;\n\n  console.log('doCreatePoll: Proposal ID', proposalId);\n\n  return retry<ReturnType<typeof dao.value.ballotIsActive>>(\n    uwdao.value.callStatic.ballotIsActive(proposalId),\n    (isActive) => {\n      if (!isActive) {\n        throw new Error('Unable to determine the status of proposal.');\n      }\n      return isActive;\n    },\n  )\n    .then(() => proposalId.replace('0x', ''))\n    .catch((err) => {\n      errors.value.push(`Failed to create poll: ${err.message ?? JSON.stringify(err)}`);\n      return '';\n    });\n}\n\nonMounted(async () => {\n  await eth.connect();\n  await eth.switchNetwork(Network.FromConfig);\n});\n</script>\n\n<template>\n  <section v-if=\"!proposalId\">\n    <h2 class=\"capitalize text-white text-2xl font-bold mb-4\">New pool</h2>\n    <p class=\"text-white text-base mb-20\">\n      Create your new poll by filling out the fields below. Once created, your poll will be live\n      immediately and responses will start being recorded.\n    </p>\n\n    <form @submit=\"createPoll\">\n      <div class=\"form-group\">\n        <input type=\"text\" id=\"question\" class=\"peer\" placeholder=\" \" v-model=\"pollName\" required />\n        <label\n          for=\"question\"\n          class=\"peer-focus:text-primaryDark peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-5\"\n        >\n          Question\n          <span class=\"text-red-500\">*</span>\n        </label>\n      </div>\n\n      <div class=\"form-group form-group-textarea\">\n        <textarea id=\"description\" class=\"peer\" placeholder=\" \" v-model=\"pollDesc\" rows=\"3\" />\n        <label\n          for=\"description\"\n          class=\"peer-focus:text-primaryDark peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-5\"\n        >\n          Description\n        </label>\n      </div>\n\n      <div class=\"form-group-extended\">\n        <label class=\"inline-block mb-5\"\n          >Answers\n          <span class=\"text-red-500\">*</span>\n        </label>\n        <div\n          class=\"relative flex justify-between items-center mb-4 gap-3 px-5\"\n          v-for=\"(choice, i) in choices\"\n          :key=\"choice.key\"\n        >\n          <input\n            class=\"focus:outline-none focus:ring-0 pb-2 text-primaryDark\"\n            type=\"text\"\n            id=\"name\"\n            :placeholder=\"`${i + 1}. Answer`\"\n            v-model=\"choices[i].value\"\n            required\n          />\n\n          <RemoveIcon\n            class=\"cursor-pointer absolute right-5 bottom-2\"\n            :class=\"{\n              'cursor-default': isLoading,\n            }\"\n            :disabled=\"isLoading\"\n            v-if=\"choices.length > 2\"\n            :data-ix=\"i\"\n            @click.prevent=\"removeChoice(i)\"\n          ></RemoveIcon>\n        </div>\n        <AppButton\n          class=\"ml-5\"\n          size=\"small\"\n          variant=\"tertiary\"\n          :disabled=\"isLoading\"\n          @click.prevent=\"addChoice\"\n        >\n          <span class=\"flex gap-2\">\n            <AddIcon />\n            <span class=\"leading-6\">Add answer</span>\n          </span>\n        </AppButton>\n      </div>\n\n      <div class=\"form-group-extended\">\n        <label class=\"inline-block mb-5\">Additional options</label>\n        <div class=\"flex pl-4\">\n          <input\n            id=\"publish-votes\"\n            class=\"w-5 h-5 border-2 border-gray-500\"\n            type=\"checkbox\"\n            v-model=\"publishVotes\"\n          />\n          <label class=\"ml-3 text-base text-gray-900\" for=\"publish-votes\">\n            Publish individual votes after voting has ended.\n          </label>\n        </div>\n      </div>\n\n      <AppButton type=\"submit\" variant=\"primary\" :disabled=\"isLoading\">\n        <span v-if=\"isLoading\">Creating…</span>\n        <span v-else>Create Poll</span>\n      </AppButton>\n\n      <div v-if=\"errors.length > 0\" class=\"text-red-500 px-3 mt-5 rounded-xl-sm\">\n        <span class=\"font-bold\">Errors:</span>\n        <ul class=\"list-disc px-8\">\n          <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n        </ul>\n      </div>\n    </form>\n  </section>\n  <section v-else>\n    <SuccessInfo>\n      <h3 class=\"text-white text-3xl mb-4\">Success</h3>\n      <p class=\"text-white text-base\">Your poll is live.</p>\n      <p class=\"text-white text-base mb-24\">Votes will be recorded from now on.</p>\n\n      <RouterLink :to=\"{ name: 'poll', params: { id: proposalId } }\">\n        <AppButton variant=\"secondary\">View poll</AppButton>\n      </RouterLink>\n    </SuccessInfo>\n  </section>\n</template>\n\n<style scoped lang=\"postcss\">\n.form-group,\n.form-group-extended {\n  @apply relative mb-6;\n}\n\n.form-group input,\ntextarea {\n  @apply block rounded-xl py-6 px-5 w-full text-base text-black appearance-none focus:outline-none focus:ring-0 bg-white;\n}\n\n.form-group label {\n  @apply absolute text-base text-primaryDark duration-300 transform -translate-y-5 scale-75 top-6 z-10 origin-[0] left-5;\n}\n\n.form-group-textarea {\n  @apply overflow-hidden;\n}\n\n.form-group-textarea textarea {\n  @apply pt-6;\n}\n\n.form-group-textarea label {\n  @apply top-6 h-10;\n  width: calc(130% - 14px);\n}\n\n.form-group-textarea label::before {\n  @apply h-10 -top-3 absolute bg-white;\n  z-index: -1;\n  content: ' ';\n  width: calc(100% - 14px); /* scrollbar */\n}\n\n.form-group-extended {\n  @apply block rounded-xl py-6 px-5 w-full appearance-none focus:outline-none focus:ring-0 bg-white;\n}\n\n.form-group-extended > label {\n  @apply text-base text-primaryDark;\n}\n\n.form-group-extended input:not([type='checkbox']) {\n  @apply w-full;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.42);\n}\n</style>\n"],"names":["_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","_sfc_render","_ctx","_cache","_hoisted_4","_PinataApi","PinataApi","__publicField","poll","body","res","resBody","resp","rejectDelay","reason","resolve","reject","retry","attempt","tryCb","maxAttempts","p","i","value","eth","useEthereumStore","dao","useDAOv1","uwdao","useUnwrappedDAOv1","gaslessVoting","useGaslessVoting","unwrappedGaslessVoting","useUnwrappedGaslessVoting","errors","ref","pollName","pollDesc","choices","_","key","publishVotes","isLoading","proposalId","choiceCount","removeChoice","addChoice","createPoll","e","doCreatePoll","c","resJson","proposalParams","createProposalTx","receipt","isActive","err","_a","onMounted","Network"],"mappings":"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"}