[
    {
        "name": "0x2FA",
        "authors": [
            {
                "Ahmed Hamed Aly": "https://ahmedhamedaly.com"
            }
        ],
        "description": "A decentralized solution for two-factor authentication (2FA), aiming to\nreplace traditional solutions like the Google Authenticator. By leveraging\nOasis, Bandada, and Near, we provide a privacy-based solution that enhances\nthe security of both web2 and web3 applications.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "tags": [
            "ETHDam 2024",
            "Hackathon",
            "2FA"
        ],
        "codeUrl": "https://github.com/0x2fa-org/0x2fa",
        "demoUrl": "https://0x2fa.vercel.app/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/aNpxMg3iIq0"
            }
        ],
        "created": "2024-04-12T00:00:00.000Z",
        "lastUpdated": "2024-04-14T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/0x2fa/screenshots/01-landing.jpeg",
            "/projects/0x2fa/screenshots/02-balance.jpeg",
            "/projects/0x2fa/screenshots/03-activate-2fa.jpeg",
            "/projects/0x2fa/screenshots/04-create-multisig.jpeg",
            "/projects/0x2fa/screenshots/04-scan-invite-code.jpeg",
            "/projects/0x2fa/screenshots/05-banner.png"
        ],
        "slug": "0x2fa"
    },
    {
        "name": "Oasis Authenticator",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "This project demonstrates how to use WebAuthN on Oasis Sapphire.\nThis allows users to use strong device-level authentication, such as TouchID,\nYubiKey, Android biometric, Windows Hello etc.\n\nCurrently it only supports SEC P256 R1 credentials, and additional work will\nbe needed to adapt it to your specific use-case.\n\nAlso includes the code for TOTP authentication.\n\nUsage:\n\n  1. Register at the Oasis Authenticator by using one of the strong\n     device-level authentication methods.\n  2. Your ID will be stored on the Sapphire chain.\n  3. Log in to one of the services which support the Oasis Authenticator (for\n     example the [Authzn Demo app](https://playground.oasis.io/authzn-demo/).\n  4. The app will receive a valid token from the smart contract, if the\n     logging in via the Oasis Authenticator is successful.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "AuthZN",
            "On-Chain Encryption",
            "React"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-authzn",
        "demoUrl": "https://playground.oasis.io/authzn",
        "tutorials": [
            {
                "View-Call Authentication": "https://docs.oasis.io/dapp/sapphire/authentication"
            }
        ],
        "created": "2023-06-17T00:00:00.000Z",
        "lastUpdated": "2023-08-07T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/authzn/screenshots/01-register.png",
            "/projects/authzn/screenshots/02-sign-in.png"
        ],
        "slug": "authzn"
    },
    {
        "name": "B-Hook",
        "authors": [
            {
                "Régis Graptin": "https://github.com/RegisGraptin"
            },
            {
                "Martin Leclercq": "https://github.com/akugone"
            },
            {
                "Florian Truchot": "https://github.com/truchot"
            }
        ],
        "description": "A new interactive way to create a book or other content creation (videos,\nmusic, art etc..). You can write a book chapter by chapter and get feedbacks\nfrom your community. This allow you to introduce your work to other people,\nand get funds while writing your books.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "ETHDam 2024",
            "Hackathon",
            "DRM"
        ],
        "codeUrl": "https://github.com/fifty-wei/ethdam-2024",
        "demoUrl": "https://ethdam-2024.vercel.app/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/g_zqatoC1h0"
            }
        ],
        "created": "2024-04-14T00:00:00.000Z",
        "lastUpdated": "2024-04-12T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/b-hook/screenshots/01-landing.png",
            "/projects/b-hook/screenshots/02-newbook.png",
            "/projects/b-hook/screenshots/03-view-book.png",
            "/projects/b-hook/screenshots/04-create-community.png",
            "/projects/b-hook/screenshots/04-manage-book.png",
            "/projects/b-hook/screenshots/05-overview-book.png",
            "/projects/b-hook/screenshots/06-overview-book2.jpg"
        ],
        "slug": "b-hook"
    },
    {
        "name": "BlackSea",
        "authors": [
            {
                "João Veiga": "https://github.com/veigajoao"
            },
            {
                "Eduardo Gomes": "https://github.com/Eduardogbg"
            },
            {
                "Rafael Kras": "https://github.com/rafaeldkb"
            }
        ],
        "description": "Cross chain Dark Pool Orderbook\n\nAn orderbook matching engine that keeps all pending and executed orders\nprivate. Founders, Whales and Institutional Investors can finally trade tokens\nonchain without being surveilled.\n\nBy leveraging the privacy preserving properties of Oasis the contract is able\nto receive, keep and process encrypted limit orders from different traders,\nnever sharing the information with anyone. Whenever 2 limit orders match, the\ncontract executes them without anyone but the parties involved learning about\nthe trade.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "tags": [
            "ETHDam 2024",
            "Hackathon",
            "DeFi"
        ],
        "codeUrl": "https://github.com/Eduardogbg/blacksea",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/a6OGe2k8ywM"
            }
        ],
        "created": "2024-04-14T00:00:00.000Z",
        "lastUpdated": "2024-04-14T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/blacksea/screenshots/01-architecture.png"
        ],
        "slug": "blacksea"
    },
    {
        "name": "BoT (Blockchain of Things)",
        "authors": [
            {
                "Fedor Panafidin": null
            },
            {
                "Merstoffe14": null
            }
        ],
        "description": "A Decentralized Subscription-Based Content Hosting Platform.\n\nOur platform\noperates seamlessly with live data feeds, making it ideal for real-time\ncontent delivery. It caters to content creators by providing an anonymous\nchannel to receive feedback, enriching the engagement without compromising\nprivacy.\n\n## Problem & Solution\n\nThe blockchain world faces a critical shortage of reliable oracles which\nconnect real-world data to blockchain systems. Our solution is a\ncommunity-driven ecosystem that simplifies the process of creating an oracle.\nWe aim to reduce entry barriers and make operating an oracle not only feasible\nbut also lucrative.\n\n## Key Features\n\n- **Anonymous Transactions**: Both content creators and subscribers engage in\n  financial transactions and feedback sharing without revealing their\n  identities.\n- **Incentivized Oracle Ecosystem**: Encourages the community to contribute to\n  the accuracy and reliability of data feeds.\n- **Broad Compatibility**: Our platform supports devices as simple as Arduino\n  or Raspberry Pi, integrating them into the blockchain to deliver valuable\n  real-time data.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "tags": [
            "ETHDam 2024",
            "Hackathon",
            "Vue",
            "IoT",
            "Raspberry PI",
            "Arduino"
        ],
        "codeUrl": "https://github.com/RRobotek/BoT",
        "tutorials": [
            {
                "Demo slides": "https://docs.google.com/presentation/d/1FH0EOex1_TIRABb91aUXZiAm1QiFMIrqAjTvb_07XBI"
            }
        ],
        "created": "2024-04-14T00:00:00.000Z",
        "lastUpdated": "2024-04-12T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/bot/screenshots/01-architecture.png"
        ],
        "slug": "bot"
    },
    {
        "name": "Cypher zer0x",
        "authors": [
            {
                "Maxime Dienger": "https://devpost.com/dienger-maxime"
            },
            {
                "Nathan Hervier": "https://github.com/Elli610"
            },
            {
                "Thomas Hussenet": "https://github.com/LeJamon"
            },
            {
                "Adam Dahmoul": "https://www.linkedin.com/in/adam-dahmoul-556b8a184"
            }
        ],
        "description": "Cypher Zer0x addresses a fundamental issue in the blockchain ecosystem: the\nlack of a privacy-focused, compliant layer for transactions. By integrating\nnatively ring Confidential transaction (RingCT) within its universal Layer 2\ninfrastructure, and due to it's design that combine plasma contract and\nzk-rollup, it offers a robust solution for users and organizations requiring\nboth privacy and compliance in their blockchain interactions. Here are some\nproblems solved by this solution :\n\n- **Lack of Compliant Privacy**: Traditional blockchain platforms often force\n  users to choose between privacy and compliance. Cypher Zer0x eliminates this\n  compromise, ensuring transactions remain private and fully compliant with\n  regulatory standards.\n- **Complex Cross-Chain Transactions**: Interacting with multiple blockchains\n  typically involves complex processes that can compromise privacy and\n  security. Cypher Zer0x simplifies cross-chain transactions, making them more\n  accessible and secure.\n- **Privacy Misconceptions**: Privacy is to often associated with malicious\n  activities. Cypher Zer0x challenges this by providing a platform where\n  privacy is a right, not a suspicion, while staying fully compliant.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript",
            "Rust"
        ],
        "tags": [
            "ETHDenver 2024",
            "Hackathon",
            "ZK-Rollups",
            "MetaMask snap"
        ],
        "codeUrl": "https://github.com/Cypher-Zer0x",
        "demoUrl": "https://app.zer0x.xyz/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/iSfK2XsoFsA"
            }
        ],
        "created": "2024-02-24T00:00:00.000Z",
        "lastUpdated": "2024-03-02T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/cypher-zer0x/screenshots/01-landing.jpeg",
            "/projects/cypher-zer0x/screenshots/02-block-details.jpeg",
            "/projects/cypher-zer0x/screenshots/03-statistics.jpeg",
            "/projects/cypher-zer0x/screenshots/04-metamask-snap.jpeg",
            "/projects/cypher-zer0x/screenshots/05-kyc.jpeg"
        ],
        "slug": "cypher-zer0x"
    },
    {
        "name": "ROSE (un) wrapper",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "A dApp that lets you wrap or unwrap ROSE on an Oasis EVM-compatible ParaTime\n(the deployed version uses Sapphire). Connects to your Oasis Authenticator\naccount.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "AuthZN",
            "React"
        ],
        "codeUrl": "https://github.com/oasisprotocol/dapp-wrose",
        "demoUrl": "https://playground.oasis.io/wrose-authzn/",
        "created": "2023-11-10T00:00:00.000Z",
        "lastUpdated": "2024-01-09T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/dapp-wrose/screenshots/01-landing-page.png"
        ],
        "slug": "dapp-wrose"
    },
    {
        "name": "Authenticator Demo",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "A short demo which connects to the Oasis Authenticator and obtains the user\nID stored on Sapphire, if the authentication is successful.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "AuthZN",
            "React"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-authzn/tree/main/demo",
        "demoUrl": "https://playground.oasis.io/authzn-demo",
        "tutorials": [
            {
                "View-Call Authentication": "https://docs.oasis.io/dapp/sapphire/authentication"
            }
        ],
        "created": "2023-11-02T00:00:00.000Z",
        "lastUpdated": "2023-11-02T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-authzn/screenshots/01-landing-page.png"
        ],
        "slug": "demo-authzn"
    },
    {
        "name": "E2E Proxy",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "A short example of how a contract can relay an end-to-end encrypted\ntransactions on Oasis Sapphire, so the relayer cannot see which contract is\nbeing invoked or what the parameters are. This is usefull for services such\nas the gas station network or other gasless services.\n\nBy using the [@oasis-protocol/sapphire-contracts](https://www.npmjs.com/package/@oasisprotocol/sapphire-contracts)\nlibrary the E2EProxy contract generates a long-term X25519 keypair which\nallows users to submit a Deoxys-II encrypted payload (with forward secrecy)\ncontaining the contract address to invoke and the calldata to pass.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity"
        ],
        "license": "CC-PDDC",
        "tags": [
            "On-Chain Encryption",
            "CLI"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-e2eproxy",
        "tutorials": [
            {
                "Gasless Transactions": "https://docs.oasis.io/dapp/sapphire/gasless"
            }
        ],
        "created": "2023-06-17T00:00:00.000Z",
        "lastUpdated": "2023-12-02T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-e2eproxy/screenshots/01-test.png",
            "/projects/demo-e2eproxy/screenshots/02-encrypted-proxy.png"
        ],
        "slug": "demo-e2eproxy"
    },
    {
        "name": "Oasis Riddle",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "This dApp demonstrates the power of the Sapphire confidential storage and\ntries to empower new developers to start building. The dApp stores a set of\nquestions and expected answers on Sapphire. It also stores a set of coupon\ncodes together with the private key unlocking the reward—ROSE or other tokens\non a production chain.\n\nUsage:\n\nCoupon codes are handed over to potential developers on different occasions\nsuch as the blockchain conferences, hackathons, programming competitions etc.\nThe developer needs to set up local Sapphire development environment, query\nfor the question passing their coupon code and finally submit the answer.\nThen, they can reclaim the rewarding private key.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "Confidential State",
            "CLI",
            "RTK 2023",
            "EthCC 2023",
            "Consensus 2023"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-oasisriddle",
        "tutorials": [
            {
                "Riddle instructions": "https://oasisprotocol.org/riddle"
            }
        ],
        "created": "2023-03-25T00:00:00.000Z",
        "lastUpdated": "2023-11-20T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-oasisriddle/screenshots/1_query.png"
        ],
        "slug": "demo-oasisriddle"
    },
    {
        "name": "Oasis Swag",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "A wheel of fortune tailored towards the swag picking at the conference booth.\n\nUsage:\n\nThe swag is selected based on the user's Ethereum address. The randomization\nseed is generated when the contract is initially created and is kept\nconfidential on Oasis Sapphire. The user can also add the elected swag to\ntheir NFT collection.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript",
            "JavaScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "RNG",
            "NFT",
            "React",
            "Consensus 2023",
            "EthCC 2023"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-oasisswag",
        "demoUrl": "https://playground.oasis.io/oasisswag",
        "created": "2023-04-18T00:00:00.000Z",
        "lastUpdated": "2023-09-13T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-oasisswag/screenshots/01-landing-page.png",
            "/projects/demo-oasisswag/screenshots/02-spin-wheel.png",
            "/projects/demo-oasisswag/screenshots/03-nft.png"
        ],
        "slug": "demo-oasisswag"
    },
    {
        "name": "OPL Secret Ballot",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "This is a simple dApp demonstrating Oasis Privacy Layer functionality for\ncross-chain confidential voting.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "OPL",
            "Vue",
            "Pinata"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-opl-secret-ballot",
        "tutorials": [
            {
                "Oasis Privacy Layer": "https://docs.oasis.io/dapp/opl"
            }
        ],
        "created": "2023-01-15T00:00:00.000Z",
        "lastUpdated": "2023-06-29T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-opl-secret-ballot/screenshots/1_new_ballot.png"
        ],
        "slug": "demo-opl-secret-ballot"
    },
    {
        "name": "Confidential Quiz",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "A simple confidential multiple choice quiz dApp. The questions and answer key\nare stored on-chain. Once a user solves the quiz, they can (optionally) claim\na ROSE reward. The payout transaction is gasless, so they **do not require\nMetaMask, pay gas fees or use any 3rd party oracles** to receive the reward.\n\nThe dApp was originally developed to educate fresh developers about the Oasis\nplatform. By sending them a small amount of ROSE, they can immediately start\nhacking and deploy their dApps on the Mainnet.\n\nTo try out the demo, use `testCoupon1` through `testCoupon50` coupon codes.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "Gasless",
            "Vue",
            "ETHDam 2024"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-quiz",
        "demoUrl": "https://playground.oasis.io/demo-quiz",
        "created": "2024-03-19T00:00:00.000Z",
        "lastUpdated": "2024-06-04T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-quiz/screenshots/01-landing.png",
            "/projects/demo-quiz/screenshots/02-quiz.png",
            "/projects/demo-quiz/screenshots/03-payout.png",
            "/projects/demo-quiz/screenshots/04-claimed.png"
        ],
        "slug": "demo-quiz"
    },
    {
        "name": "Starter Project (Go)",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "Skeleton repo for a backend microservice written in Go that communicates with\nOasis Sapphire:\n\n  - includes a simple CLI app for building and deploying the smart contract,\n    performing queries and submitting transactions written in Go,\n  - imports the [Sapphire ParaTime Go client](https://pkg.go.dev/github.com/oasisprotocol/sapphire-paratime/clients/go)\n    package for connecting to Mainnet, Testnet or Localnet Sapphire networks,\n    using signed queries and encrypted transactions,\n  - includes a simple solidity message box smart contract with an end-to-end\n    test script.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Go",
            "Solidity"
        ],
        "license": "Apache-2.0",
        "tags": [
            "CLI"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-starter-go",
        "tutorials": [
            {
                "Sapphire Quickstart": "https://docs.oasis.io/dapp/sapphire/quickstart"
            }
        ],
        "created": "2024-07-03T00:00:00.000Z",
        "lastUpdated": "2024-07-19T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-starter-go/screenshots/01-usage.png"
        ],
        "slug": "demo-starter-go"
    },
    {
        "name": "Starter Project (Python)",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "Skeleton repo for a backend microservice written in Python that communicates\nwith Oasis Sapphire:\n\n  - includes a simple CLI app for building and deploying the smart contract,\n    performing queries and submitting transactions written in Python,\n  - imports the [Sapphire Python client](https://github.com/oasisprotocol/sapphire-paratime/tree/main/clients/py)\n    package for connecting to Mainnet, Testnet or Localnet Sapphire networks,\n    using encrypted transactions,\n  - includes a simple solidity message box smart contract with an end-to-end\n    test script.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Python",
            "Solidity"
        ],
        "license": "Apache-2.0",
        "tags": [
            "CLI"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-starter-py",
        "tutorials": [
            {
                "Sapphire Quickstart": "https://docs.oasis.io/dapp/sapphire/quickstart"
            }
        ],
        "created": "2024-08-01T00:00:00.000Z",
        "lastUpdated": "2024-09-09T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-starter-py/screenshots/01-usage.png"
        ],
        "slug": "demo-starter-py"
    },
    {
        "name": "Starter Project",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "Skeleton monorepo for a typical modern EVM-compatible confidential dApp built\non Oasis.\n\nContains the **backend** package which:\n\n  - includes a simple solidity message box smart contract with tests written\n    in TypeScript,\n  - imports the [@oasisprotocol/sapphire-contracts](https://www.npmjs.com/package/@oasisprotocol/sapphire-contracts)\n    solidity package for on-chain encryption and other Sapphire-specific primitives,\n  - imports the [@oasisprotocol/sapphire-hardhat](https://www.npmjs.com/package/@oasisprotocol/sapphire-hardhat)\n    package for connecting to Mainnet, Testnet or Localnet Sapphire networks\n    and deploying the contract.\n\nThe **frontend** package:\n\n  - is written in TypeScript and Vue,\n  - imports the [@oasisprotocol/sapphire-paratime](https://www.npmjs.com/package/@oasisprotocol/sapphire-paratime)\n    package for encrypting the transactions and signing the contract view calls,\n  - supports MetaMask, Brave or other EIP-1193-compatible wallet.\n\nUses `pnpm` to manage the monorepo.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "pnpm",
            "Vue",
            "SmartCon 2023"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-starter",
        "tutorials": [
            {
                "Sapphire Quickstart": "https://docs.oasis.io/dapp/sapphire/quickstart"
            }
        ],
        "created": "2023-09-29T00:00:00.000Z",
        "lastUpdated": "2023-10-06T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-starter/screenshots/01-landing-page.png",
            "/projects/demo-starter/screenshots/02-hello-world.png",
            "/projects/demo-starter/screenshots/03-manage-deploy.png"
        ],
        "slug": "demo-starter"
    },
    {
        "name": "Confidential Voting",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "This is a simple dApp for confidential voting. It exposes\nthe latest Oasis confidentiality features such as Sapphire,\nOPL and gasless transactions.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "Gasless",
            "Vue",
            "EthCC 2023"
        ],
        "codeUrl": "https://github.com/oasisprotocol/demo-voting",
        "demoUrl": "https://playground.oasis.io/demo-voting",
        "tutorials": [
            {
                "Official Oasis Documentation": "https://docs.oasis.io/dapp/sapphire/gasless"
            }
        ],
        "created": "2023-08-15T00:00:00.000Z",
        "lastUpdated": "2023-09-18T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/demo-voting/screenshots/01-active-polls.png",
            "/projects/demo-voting/screenshots/02-vote.png",
            "/projects/demo-voting/screenshots/03-voting-closed.png"
        ],
        "slug": "demo-voting"
    },
    {
        "name": "DSearch",
        "authors": [
            {
                "Arsalaan Alam": "https://www.arsalaan.bio/"
            },
            {
                "Krish Dhar": "https://github.com/ronykris"
            }
        ],
        "description": "A Private Decentralized & Distributed Search Engine built on Sapphire:\n\n- **Privacy-Centric Search**: DSearch employs advanced encryption and\n  privacy-preserving techniques to ensure user anonymity. When a user submits\n  a search query, it is processed in a way that separates the user's identity\n  from the query itself. This means that neither DSearch nor any external\n  entity can trace the query back to the user. Additionally, DSearch doesn't\n  store user search history or use tracking cookies, guaranteeing that user\n  data remains private.\n\n- **Decentralized Infrastructure**: DSearch operates on a decentralized\n  network of nodes, each hosting a copy of the search engine's index. This\n  decentralized architecture enhances fault tolerance and resiliency. When a\n  user submits a query, it is routed through this network, ensuring that there\n  is no single point of failure or control.\n\n- **Anonymous Browsing**: DSearch not only prevents tracking by search engines\n  but also protects users from website tracking mechanisms. By using the Oasis\n  Privacy Layer, it acts as a privacy shield between the user and the websites\n  they visit, blocking cookies, scripts, and trackers commonly employed by\n  websites. This comprehensive approach ensures that user activity remains\n  truly private during their online journeys.\n\nFor building DSearch, we constructed a very complicated infrastructure in the\nbackend. We later realised that this infrastructure can be open-sourced and\nwill be beneficial to a lot of people building on OPL. We called this protocol\nas API Link and DSearch serves as just one compelling use case within its\necosystem. API Link is a protocol that allows Oasis Sapphire users to securely\ninvoke APIs to interact with the external world. By connecting on-chain events\nand data with the external world, we believe that this protocol will bridge the\ngap between the two worlds and open up a new domain of decentralized\napplications (dApps). Here's what API Link does:\n\n- Secure API Invocation\n- Bridging On-Chain and Off-Chain Data\n- Enhanced dApp Possibilities\n- Augmenting the Oasis Network\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "TypeScript",
            "JavaScript",
            "Solidity"
        ],
        "tags": [
            "P4W3",
            "Hackathon",
            "Search"
        ],
        "codeUrl": "https://github.com/ronykris/dapilink",
        "demoUrl": "https://dsearch-dapilink.vercel.app/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/L8hURZ_cn5g"
            }
        ],
        "created": "2023-09-07T00:00:00.000Z",
        "lastUpdated": "2023-10-06T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/dsearch/screenshots/01-landing.png",
            "/projects/dsearch/screenshots/02-search-metamask.png",
            "/projects/dsearch/screenshots/03-search-results.png",
            "/projects/dsearch/screenshots/04-image-results.png",
            "/projects/dsearch/screenshots/05-related-results.png"
        ],
        "slug": "dsearch"
    },
    {
        "name": "Empyreal Exchange",
        "authors": [
            {
                "Unknown": "https://github.com/johnny-empyreal"
            }
        ],
        "description": "Abstracting wallets and encryption for users to allow for private transactions\nand encrypted data transfer.\n\nFully privacy preserving implementation on Arbitrum that uses Sapphire as its\nprivacy layer. In addition, we used the lessons learned in implementing this\nto put together a reference implementation for wallet abstraction on sapphire.\nThe wallet abstraction builds on top of the tooling developed as we built the\nprivacy preserving ERC-20 implementation.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity"
        ],
        "license": "Apache-2.0",
        "tags": [
            "P4W3",
            "Hackathon",
            "OPL"
        ],
        "codeUrl": "https://github.com/empyrealapp/sapphire_hackathon",
        "demoUrl": "https://beta.empyreal.app/",
        "tutorials": [
            {
                "Video demo": "https://vimeo.com/871000099"
            }
        ],
        "created": "2023-10-04T00:00:00.000Z",
        "lastUpdated": "2023-10-09T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/empyreal-exchange/screenshots/01-landing.png",
            "/projects/empyreal-exchange/screenshots/02-deposit.png",
            "/projects/empyreal-exchange/screenshots/03-withdraw.png"
        ],
        "slug": "empyreal-exchange"
    },
    {
        "name": "Confidential Hello World on Cipher",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "Minimal **confidential** smart contract written in rust which uses the\nOasis Contracts SDK including the contract encryption of specific fields and\ntransaction end-to-end encryption.\n\nThe contract code can be uploaded to Cipher Mainnet, Testnet or Localnet,\ninstantiated and transacted with the [Oasis CLI](https://github.com/oasisprotocol/cli).\n\nThis example is part of the official [Oasis SDK](https://github.com/oasisprotocol/oasis-sdk)\ncodebase tests.\n",
        "paratimes": [
            "cipher"
        ],
        "languages": [
            "Rust"
        ],
        "license": "Apache-2.0",
        "tags": [
            "Confidential State",
            "Oasis Wasm",
            "Oasis CLI",
            "CLI"
        ],
        "codeUrl": "https://github.com/oasisprotocol/oasis-sdk/tree/main/examples/contract-sdk/c10l-hello-world",
        "tutorials": [
            {
                "Cipher Confidential Hello World": "https://docs.oasis.io/dapp/cipher/confidential-smart-contract"
            }
        ],
        "created": "2022-10-03T00:00:00.000Z",
        "lastUpdated": "2023-12-21T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/example-cipher-c10l-hello-world/screenshots/01-upload1.png",
            "/projects/example-cipher-c10l-hello-world/screenshots/02-upload2.png",
            "/projects/example-cipher-c10l-hello-world/screenshots/03-instantiate.png",
            "/projects/example-cipher-c10l-hello-world/screenshots/04-call.png"
        ],
        "slug": "example-cipher-c10l-hello-world"
    },
    {
        "name": "Hello World on Cipher",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "Minimal non-confidential smart contract written in rust which uses the Oasis\nContracts SDK.\n\nThe contract code can be uploaded to Cipher Mainnet, Testnet or Localnet,\ninstantiated and transacted with the [Oasis CLI](https://github.com/oasisprotocol/cli).\n\nThis example is part of the official [Oasis SDK](https://github.com/oasisprotocol/oasis-sdk)\ncodebase tests.\n",
        "paratimes": [
            "cipher"
        ],
        "languages": [
            "Rust"
        ],
        "license": "Apache-2.0",
        "tags": [
            "Oasis Wasm",
            "Oasis CLI",
            "CLI"
        ],
        "codeUrl": "https://github.com/oasisprotocol/oasis-sdk/tree/main/examples/contract-sdk/hello-world",
        "tutorials": [
            {
                "Cipher Hello World": "https://docs.oasis.io/dapp/cipher/hello-world"
            }
        ],
        "created": "2022-10-03T00:00:00.000Z",
        "lastUpdated": "2023-12-21T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/example-cipher-hello-world/screenshots/01-upload1.png",
            "/projects/example-cipher-hello-world/screenshots/02-upload2.png",
            "/projects/example-cipher-hello-world/screenshots/03-instantiate.png",
            "/projects/example-cipher-hello-world/screenshots/04-call.png"
        ],
        "slug": "example-cipher-hello-world"
    },
    {
        "name": "Hardhat Sapphire Example",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "A simple example which uses Hardhat for connecting to Sapphire and use its\nconfidential state to implement a [dead-man switch](https://en.wikipedia.org/wiki/Dead_man%27s_switch)\napp which stores a *secret ingredient*.\n\nThis example is part of the official [sapphire-paratime](https://github.com/oasisprotocol/sapphire-paratime)\ncodebase tests.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "Confidential Store",
            "CLI"
        ],
        "codeUrl": "https://github.com/oasisprotocol/sapphire-paratime/tree/main/examples/hardhat",
        "tutorials": [
            {
                "Sapphire Quickstart": "https://docs.oasis.io/dapp/sapphire/quickstart"
            }
        ],
        "created": "2022-09-07T00:00:00.000Z",
        "lastUpdated": "2023-11-21T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/example-sapphire-hardhat/screenshots/01-run-vigil.png"
        ],
        "slug": "example-sapphire-hardhat"
    },
    {
        "name": "On-Chain Signer",
        "authors": [
            {
                "Oasis Protocol Foundation": "https://oasisprotocol.org"
            }
        ],
        "description": "Short example to demonstrate Sapphire's on-chain **transaction generation**\nand **signing** capabilities.\n\nThere are two tests included: The non-confidential one can be executed on any\nEVM-compatible chain, whereas the *confidential* test is executed only\non Sapphire-compatible chain (e.g. the [Sapphire's Localnet docker\nimage](https://docs.oasis.io/dapp/sapphire/guide#running-a-private-oasis-network-locally).\n\nThis example is part of the official\n[sapphire-paratime](https://github.com/oasisprotocol/sapphire) codebase\ntests.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "license": "Apache-2.0",
        "tags": [
            "On-Chain Encryption",
            "CLI"
        ],
        "codeUrl": "https://github.com/oasisprotocol/sapphire-paratime/tree/main/examples/onchain-signer",
        "tutorials": [
            {
                "Sapphire On-Chain Signer": "https://docs.oasis.io/dapp/sapphire/gasless#on-chain-signer"
            }
        ],
        "created": "2023-09-14T00:00:00.000Z",
        "lastUpdated": "2023-10-19T00:00:00.000Z",
        "maintainedByOasis": true,
        "screenshots": [
            "/projects/example-sapphire-onchain-signer/screenshots/01-comment-box-tests.png"
        ],
        "slug": "example-sapphire-onchain-signer"
    },
    {
        "name": "Fastlane",
        "authors": [
            {
                "Teja Reddy": "https://github.com/narasim-teja"
            },
            {
                "Nathalie Nunez": "https://fractilians.notion.site/Nathalie-Nunez-aka-Fractilians-f5477b6ebc5d4d63ad8c79358ef8f8c4"
            },
            {
                "Brett Seibert": "https://brettseibert.com/"
            },
            {
                "C Spragu": "https://devfolio.co/@spragu"
            }
        ],
        "description": "FastLane offers a unique and ever-evolving gameplay experience where users can\ntest their skills, own and monetize in-game assets. Players navigate a\ndynamic, blockchain-powered road, overcoming unforeseen challenges set by\nother players. By owning checkpoints, users can earn income and shape the\nexperience for others, fostering a collaborative and competitive environment.\nWhether you're a seasoned gamer, a blockchain enthusiast, or simply looking\nfor something new, The Road provides an engaging platform to play, own, and\ncontribute to a unique and ever-expanding world.\n\nFastLane is an on-chain game, here's how it makes tasks easier:\n\n1. Ownership and Control: Players own checkpoints on the road, represented as\n   NFTs. They can control the difficulty and experience for those traversing\n   their checkpoint by setting obstacles.\n\n2. Unpredictability and Engagement: Obstacles are encrypted and hidden until\n   encountered, creating a dynamic and unpredictable gameplay experience. New\n   checkpoints continuously increase the road's length and potential for\n   variation.\n\n3. Monetization Opportunities: Players can earn income through fees paid by\n   others attempting their checkpoints and potentially through strategic\n   placement of advertisements along the road.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "tags": [
            "ETHDenver 2024",
            "Hackathon"
        ],
        "codeUrl": "https://github.com/narasim-teja/FastLane-EthDenver",
        "demoUrl": "https://www.fastlane.run/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/-cKj4npXsic"
            }
        ],
        "created": "2024-02-27T00:00:00.000Z",
        "lastUpdated": "2024-05-02T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/fastlane/screenshots/01-landing.png",
            "/projects/fastlane/screenshots/02-game.png",
            "/projects/fastlane/screenshots/03-obstacle.png"
        ],
        "slug": "fastlane"
    },
    {
        "name": "Lending Sapphire",
        "authors": [
            {
                "Tarun Gupta": "https://github.com/Tarun-k-Gupta"
            },
            {
                "Bhavesh Gupta": "https://github.com/barrytra"
            },
            {
                "Aarav Mehta": "https://github.com/aaravm"
            },
            {
                "Abhinav Agarwalla": "https://github.com/lla-dane"
            }
        ],
        "description": "A private, KYC-free lending platform on Oasis Sapphire. Utilizes dual-token\nsetup, ROFL (TEE) for fetching real time price feeds. Features on-chain and\noff-chain confidentiality to ensure secure, private transactions. \n\nThis platform takes full advantage of the Oasis Sapphire blockchain to offer a\nsecure environment for executing EVM compatible smart contracts with enhanced\non-chain data confidentiality. This feature ensures that sensitive transaction\ndetails such as sender and receiver information are encrypted, allowing users\nto engage in lending and borrowing without compromising privacy. This shields\nthem from common blockchain threats like front-running, where exposed\ntransaction details could be misused by opportunistic observers.\n\nMoreover, we integrate off-chain confidentiality using ROFL, which\nsignificantly boosts out platform's integrity and security, when paired with\nTrusted Execution Environments (TEEs). This setup not only secures sensitive\noperations like real-time pricing feeds but also ensures the accuracy and\nintegrity of these feeds, crucial for calculating loan values reliably. By\nautomating financial processes such as loan issuance based on collateral and\nauto-liquidation protocols in a secure manner, out platform delivers tailored\nand responsive financial services that preserve the inherent privacy first\nideals of blockchain technology.\n\nCheck out more on the [EthGlobal project page](https://ethglobal.com/showcase/lendingsapphire-jrbsc).\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "TypeScript",
            "Rust",
            "Solidity"
        ],
        "tags": [
            "ROFL",
            "DeFi",
            "React",
            "ETHGlobal Singapore 2024",
            "Hackathon"
        ],
        "codeUrl": "https://github.com/barrytra/Lending-Sapphire",
        "tutorials": [
            {
                "Video demo": "https://www.loom.com/share/70a023c0110b4b1e9383c235023741cd?sid=01d5507f-3a59-4237-bd75-87fe3918cce6"
            }
        ],
        "created": "2024-09-20T00:00:00.000Z",
        "lastUpdated": "2024-09-22T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/lending-sapphire/screenshots/01-landing-page.jpg",
            "/projects/lending-sapphire/screenshots/02-orderbook.jpg",
            "/projects/lending-sapphire/screenshots/03-loan.jpg",
            "/projects/lending-sapphire/screenshots/04-lend.jpg"
        ],
        "slug": "lending-sapphire"
    },
    {
        "name": "Nyx",
        "authors": [
            {
                "PopTony": "https://github.com/PopTony"
            },
            {
                "knlbb": "https://github.com/knlbb"
            }
        ],
        "description": "A therapy AI app, prioritizing user privacy with off-chain chat storage.\nTherapists can securely access data on-chain, enhancing trust and transparency,\nall powered by ENS for easy identification.\n\nIntroducing a cutting-edge therapy AI app developed using the Oasis Protocol,\nDynamic Labs, and Ethereum Name Service (ENS). This app prioritizes user\nprivacy by leveraging the confidential AI chat bot running on Oasis ROFL,\nensuring that sensitive information remains secure. Therapists can request\naccess to this data on-chain, facilitated by a seamless integration with the\nOasis Protocol for enhanced security and scalability. With Dynamic Labs'\ninnovative features and ENS for easy user identification, this app empowers\nboth patients and therapists to engage in a trusted, transparent therapeutic\nexperience.\n\nCheck out more on the [EthGlobal project page](https://ethglobal.com/showcase/nyx-b3j3b).\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "JavaScript",
            "Rust",
            "Solidity"
        ],
        "tags": [
            "ROFL",
            "AI",
            "React",
            "ETHGlobal Singapore 2024",
            "Hackathon"
        ],
        "codeUrl": "https://github.com/knlbb/therapyonchain",
        "tutorials": [
            {
                "Video demo": "https://www.loom.com/share/d733610af7a54a01a5f7d9ad1b605c1a?sid=ede26738-a492-4ab2-9bdc-51b72c14bc50"
            }
        ],
        "created": "2024-09-06T00:00:00.000Z",
        "lastUpdated": "2024-09-22T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/nyx/screenshots/01-default.jpg",
            "/projects/nyx/screenshots/02-chat.jpg",
            "/projects/nyx/screenshots/03-chat2.jpg",
            "/projects/nyx/screenshots/04-howitworks.jpg"
        ],
        "slug": "nyx"
    },
    {
        "name": "OasisGuard",
        "authors": [
            {
                "Utku Ömer Kılıç": "https://x.com/utmrklc"
            },
            {
                "Farhad Asgarov": "https://x.com/asgarovf"
            },
            {
                "Eylül Şahin": "https://x.com/eylllsh"
            },
            {
                "Selim Çetiner": "https://x.com/selim_jpeg"
            }
        ],
        "description": "Your private vault on the blockchain, ensuring your secrets remain exclusively\nyours, with no leaks and complete control!\n\nCan you imagine the chaos if all your passwords & private keys & seed phrases\nor any recovery code(i.e. 2FA Secret) disappeared tomorrow? 🤯\n\nToday, we manage countless account details, passwords, and private keys, often\nneeding to create new ones every day. Typically, we rely on centralized\nplatforms like traditional password managers.😕\n\nBut what if these systems were to suddenly shut down? How would we secure our\ndata?🤔\n\nThat's where OasisGuard steps in. This browser extension safeguards your\npasswords within a confidential smart contract, accessible only through your unique Passkey(Webauthn). By leveraging Sapphire's Confidential EVM, we've placed all passwords into a 'black box' that’s accessed using commonly used Passkeys, verified through r1 curve signatures on Oasis.\n\nDo I need to pay gas fees for each account detail I add?\n\nNo, you don't need to pay gas fees for that. We've integrated Paymaster. We\nhandle this using the EIP155Signer.sign() method to broadcast the transactions\nyou send, through our Gasless Proxy contract. This ensures that you won’t have\nto pay any gas fees.\n\nBut there's more—OASISGUARD also allows for the secure sharing of passwords\nwith others via Semaphore, enabling group creation and seamless collaboration,\nwhether it's with one person or an entire team.\n\nMoreover, it's worth noting that we have implemented this entirely with an\nExternally Owned Account (EOA). With the upcoming **EIP-3074**, EOAs will be\nable to perform some operations currently only possible with Smart Accounts,\nmaking the integration of a passkey with an EOA even more valuable.\n\nCheck out the [YouTube video](https://www.youtube.com/watch?v=muluwPB6a9w).\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "tags": [
            "ETHDam 2024",
            "Hackathon",
            "Browser extension",
            "Password manager"
        ],
        "codeUrl": "https://github.com/itublockchain/ethdam-oasis-guard",
        "demoUrl": "https://oasisguard.xyz/",
        "tutorials": [
            {
                "Video demo": "https://www.youtube.com/watch?v=muluwPB6a9w"
            }
        ],
        "created": "2024-04-12T00:00:00.000Z",
        "lastUpdated": "2024-04-14T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/oasisguard/screenshots/01-screenshots.png",
            "/projects/oasisguard/screenshots/02-banner.png"
        ],
        "slug": "oasisguard"
    },
    {
        "name": "PrivAds",
        "authors": [
            {
                "Pedro Palacios": "https://github.com/palmenros"
            },
            {
                "Oriol Saguillo Gonzalez": "https://github.com/saguillo2000"
            },
            {
                "Franco Sainas": "https://github.com/fsainas"
            }
        ],
        "description": "Leverages the Oasis confidential blockchain and machine learning algorithms to\nserve targeted advertisements while prioritizing user privacy. Traditional\nadvertising methods often compromise user data privacy, leading to concerns\nabout data leaks and unauthorized access and selling of data. PrivAd addresses\nthese concerns by ensuring that user data remains encrypted and anonymous\nthroughout the ad-serving process. The advertisers in no moment have access\nto the user's private data, which is only used inside the confidential smart\ncontract to serve personalized ads.\n\nPrivAds employs a combination of smart contracts, decentralized storage\nsolutions, and machine learning models to analyze user behavior and\npreferences without giving advertisers access to user's sensitive personal\ninformation.\n\nKey features of PrivAds include:\n\n- Privacy-preserving targeted ads\n- Support for anti-fraud models\n- On-chain ML\n- Extremely low-dimensional word embeddings\n- User financial reward\n- Transparent ad-serving process\n- Advertiser cross-tracking protection\n- IPFS storage for ad-content\n- Opt-in participation\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript",
            "Python"
        ],
        "tags": [
            "ETHDam 2024",
            "Hackathon",
            "AI",
            "Advertising",
            "IPFS"
        ],
        "codeUrl": "https://github.com/palmenros/private-ads",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/DR6imetTBsk"
            }
        ],
        "created": "2024-04-12T00:00:00.000Z",
        "lastUpdated": "2024-04-25T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/privads/screenshots/01-user.png",
            "/projects/privads/screenshots/02-advertiser.png",
            "/projects/privads/screenshots/03-banner.png"
        ],
        "slug": "privads"
    },
    {
        "name": "RIP Protocol",
        "authors": [
            {
                "felyn": "https://github.com/felynoir"
            },
            {
                "JernKunpittaya": "https://github.com/JernKunpittaya"
            }
        ],
        "description": "Allows encrypted data to stay private while performing specific tasks on the\nblockchain. Although blockchain is public, RIP ensures sensitive information\nremains secure, letting users leverage blockchain benefits without revealing\npersonal data.\n\n## Example with DNA\n\nImagine you want to leave an inheritance for your children but need a way to\nprove their identity. Using RIP Protocol, you can encrypt your DNA data on the\nblockchain and set a condition that only someone with a matching DNA can claim\nthe inheritance. When your children provide their DNA, it is privately matched\nwith the encrypted data. No one else on the blockchain can access your DNA,\nbut the protocol verifies the match and automatically releases the assets.\n\nWith RIP Protocol, users can securely manage private data in a decentralized\nenvironment, combining the privacy of encryption with the benefits of\nblockchain transparency.\n\nCheck out more on the [EthGlobal project page](https://ethglobal.com/showcase/rip-protocol-jgw26).\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "tags": [
            "ROFL",
            "React",
            "ETHGlobal Singapore 2024",
            "Hackathon"
        ],
        "codeUrl": "https://github.com/felynoir/rip-proc",
        "demoUrl": "https://rip-proc.vercel.app/",
        "created": "2024-09-21T00:00:00.000Z",
        "lastUpdated": "2024-09-25T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/rip-protocol/screenshots/01-slide1.jpg",
            "/projects/rip-protocol/screenshots/02-slide2.jpg",
            "/projects/rip-protocol/screenshots/03-slide3.jpg",
            "/projects/rip-protocol/screenshots/04-slide4.jpg",
            "/projects/rip-protocol/screenshots/05-slide5.jpg",
            "/projects/rip-protocol/screenshots/06-slide6.jpg"
        ],
        "slug": "rip-protocol"
    },
    {
        "name": "Rose Derby",
        "authors": [
            {
                "Joe Petrakovich": "https://joe.ptrkv.ch/"
            }
        ],
        "description": "A horse betting \"game\", similar to real-world horse betting, except with\nsimulated races using Sapphire RNG to determine the race results. What makes\nit interesting is that the participants are all completely private but the\nstatistics and game activity is public, so it's obvious people are playing\n(and winning), but no one knows who is playing.\n\nPlayers are incentivized to schedule and find participants for races by\nsetting a % organizer \"take\" which awards them a percentage of the total\nbetting pool on a race. Then once the betting window has ended, players are\nthen further incentivized to call the \"determine race results\" function to\ncompute the results with Sapphire RNG and receive an additional percentage of\nthe pool.\n\nI believe this project would be a great starter project for more serious web3\non-chain gaming or even for casinos.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "TypeScript",
            "Solidity"
        ],
        "license": "MIT",
        "tags": [
            "P4W3",
            "Hackathon",
            "RNG",
            "Svelte"
        ],
        "codeUrl": "https://github.com/joepetrakovich/rose-derby",
        "demoUrl": "https://derby.brosette.dev/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/E3C2YK5TNbA"
            }
        ],
        "created": "2023-08-16T00:00:00.000Z",
        "lastUpdated": "2024-01-03T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/rose-derby/screenshots/01-race-list.png",
            "/projects/rose-derby/screenshots/02-create-a-race.png",
            "/projects/rose-derby/screenshots/03-bet.png",
            "/projects/rose-derby/screenshots/04-results.png"
        ],
        "slug": "rose-derby"
    },
    {
        "name": "Sapphire Confidential",
        "authors": [
            {
                "Jérome Rastit": "https://github.com/jrastit"
            }
        ],
        "description": "Make yours transactions private on web3 blockchains with the power of\nSapphire.\n\nSecure Hardware like TEE, HSM, Secure Enclave, gives the possibility to handle\nprivate key that are directly accessible by nobody (depending of the physical\nsecurity of the hardware) and that can be used for detaining assets and\nsigning transactions for the blockchain.\n\nUsing virtual addresses is smoother for mixers and remove the constraint to\nhave fix amount of asset locked and to have a long minimum time for waiting.\n\nOasis Sapphire blockchain give the possibility to manage private keys within a\nprivate smart contract where the data are kept private into the contract with\nsecure enclave technology. and private exchange.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "JavaScript",
            "Solidity"
        ],
        "tags": [
            "P4W3",
            "Hackathon",
            "OPL",
            "Mixer",
            "React"
        ],
        "codeUrl": "https://github.com/jrastit/sapphire-confidential",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/lOk41r4K0jY"
            }
        ],
        "created": "2023-09-30T00:00:00.000Z",
        "lastUpdated": "2023-10-05T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/sapphire-confidential/screenshots/01-transaction-in-progress.png"
        ],
        "slug": "sapphire-confidential"
    },
    {
        "name": "Secret Bids",
        "authors": [
            {
                "Tristan Dinh": "https://trietdinh.home.blog/"
            }
        ],
        "description": "An on-chain privacy-preserving auction platform that allows auctioneers to\nlaunch secret auctions to sell their tokens/NFT.\n\nCurrently, the platform offers 2 types of on-chain auctions:\n\n- Blind auction: (sealed bid auction) is a type of auction where all bidders\n  commit their offers in sealed envelopes, without knowing the bids of the\n  other participants. The highest bid wins the auction.\n- Lottery auction: is a type of auction where the winning bid is determined\n  randomly.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "JavaScript",
            "TypeScript",
            "Solidity"
        ],
        "license": "MIT",
        "tags": [
            "P4W3",
            "Hackathon",
            "OPL",
            "Svelte"
        ],
        "codeUrl": "https://github.com/kryptopoo/oasis-secret-bids",
        "demoUrl": "https://secret-bids-app.onrender.com/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/K0nSXa4VyDc"
            }
        ],
        "created": "2023-09-16T00:00:00.000Z",
        "lastUpdated": "2023-10-05T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/secret-bids/screenshots/01-auctions.png",
            "/projects/secret-bids/screenshots/02-create-auction.png",
            "/projects/secret-bids/screenshots/03-view-auction.png",
            "/projects/secret-bids/screenshots/04-view-auction2.png"
        ],
        "slug": "secret-bids"
    },
    {
        "name": "Secret Sponsor",
        "authors": [
            {
                "Taiju Sanagi": "https://github.com/taijusanagi"
            }
        ],
        "description": "Secret Sponsor offers a mechanism for anonymous gas-sponsoring, incorporating\naccount abstraction and the Oasis Privacy Layer.\n\nUsers can stay anonymous by:\n\n- Initiate encrypted funding transactions in Sapphire.\n- Bridge these funds to the Goerli account abstraction paymaster.\n- Execute transactions without incurring gas fees.\n\nMoreover, because the system focuses solely on gas-sponsoring, it becomes\ndifficult to associate it with illicit actions such as money laundering. This\nis optimal privacy tailored for smaller users, particularly NFT artists.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "TypeScript",
            "Solidity"
        ],
        "license": "MIT",
        "tags": [
            "P4W3",
            "Hackathon",
            "OPL",
            "Gasless",
            "Account abstraction",
            "React"
        ],
        "codeUrl": "https://github.com/taijusanagi/opl-secret-sponsor",
        "demoUrl": "https://opl-secret-sponsor.vercel.app/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/JnP3FGQu4ds"
            }
        ],
        "created": "2023-09-04T00:00:00.000Z",
        "lastUpdated": "2023-09-06T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/secret-sponsor/screenshots/01-home.png",
            "/projects/secret-sponsor/screenshots/02-tx.png",
            "/projects/secret-sponsor/screenshots/03-diagram.png",
            "/projects/secret-sponsor/screenshots/04-explorer.png",
            "/projects/secret-sponsor/screenshots/05-tx-details.png"
        ],
        "slug": "secret-sponsor"
    },
    {
        "name": "Spacetar",
        "authors": [
            {
                "Donatus Prince": "https://github.com/amdonatusprince"
            }
        ],
        "description": "A socialFI forum dApp that allows users to earn reward tokens by actively\nparticipating and engaging in the community. User's earned rewards can be\nswapped for any ERC-20 tokens on Sapphire and also rewards can be staked and\nlocked to earn more interest and incentives.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "JavaScript",
            "Solidity"
        ],
        "tags": [
            "P4W3",
            "Hackathon",
            "Chat",
            "React"
        ],
        "codeUrl": "https://github.com/amdonatusprince/spacetar-on-oasis",
        "demoUrl": "https://spacetar-on-oasis.vercel.app/",
        "tutorials": [
            {
                "Building Spacetar: Step-by-Step Tutorial on Building an Encrypted SocialFi Forum dApp on the Oasis Sapphire Network": "https://donatusprince.medium.com/building-spacetar-step-by-step-tutorial-on-building-an-encrypted-socialfi-forum-dapp-on-the-oasis-6a1854c835eb"
            },
            {
                "Video demo": "https://youtu.be/MpsgqMmtJJ4"
            }
        ],
        "created": "2023-09-29T00:00:00.000Z",
        "lastUpdated": "2023-10-06T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/spacetar/screenshots/01-landing.png",
            "/projects/spacetar/screenshots/02-home.png",
            "/projects/spacetar/screenshots/03-chat.png"
        ],
        "slug": "spacetar"
    },
    {
        "name": "SQUIDL",
        "authors": [
            {
                "Kelvin Adithya": "https://github.com/kelvinkn17"
            },
            {
                "kebabhan": "https://github.com/tfarhan00"
            },
            {
                "Buwono": "https://github.com/Dicky-27"
            }
        ],
        "description": "A privacy-focused platform that makes managing payments simple and secure.\nWith private static payment links that also work as ENS addresses, you can\neasily accept crypto or credit card payments while keeping everything\nuntraceable.\n\nSquidl.me is a platform designed to give individuals and businesses total\ncontrol over their payments and financial transactions. By using stealth\naddresses, Squidl ensures that every transaction is private and untraceable.\nWith custom static payment links that double as ENS addresses, users can\neasily receive payments in crypto or fiat without exposing their identities or\nfinancial data. The platform offers seamless integration with various\nblockchain networks, including Ethereum, BSC, Morph, Linea, and Flow EVM,\nallowing users to accept a wide range of payment options. Additionally, credit\ncard payments are converted to USDC and bridged to BSC, ensuring both\nconvenience and privacy. Squidl also features the ability to bridge funds to\nthe Oasis Sapphire network, where transactions become completely untraceable,\nadding an extra layer of security. Squidl’s flexibility extends to asset\ntransfers as well, supporting the private transfer of NFTs, soulbound tokens,\nand liquidity tokens. With its easy-to-use interface, unified dashboard, and\npowerful SDK for developers, Squidl is the go-to platform for anyone looking\nto manage payments with privacy, flexibility, and control.\n\nCheck out more on the [EthGlobal project page](https://ethglobal.com/showcase/squidl-psquk).\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "JavaScript"
        ],
        "tags": [
            "DeFi",
            "Gasless",
            "React",
            "ETHGlobal Singapore 2024",
            "Hackathon"
        ],
        "codeUrl": "https://github.com/engowl/squidl",
        "demoUrl": "https://www.squidl.me/",
        "tutorials": [
            {
                "Video demo": "https://stream.mux.com/BEUanmt0100GYnMoMMjqItzAfPxhpXFmu02XrUNcXcBZl8/high.mp4"
            }
        ],
        "created": "2024-09-20T00:00:00.000Z",
        "lastUpdated": "2024-10-02T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/squidl/screenshots/01-landingpage.jpg",
            "/projects/squidl/screenshots/02-balance.jpg",
            "/projects/squidl/screenshots/03-transactions.jpg",
            "/projects/squidl/screenshots/04-send.jpg"
        ],
        "slug": "squidl"
    },
    {
        "name": "Texas Hide'em",
        "authors": [
            {
                "Greg Johns": "https://devfolio.co/@GregJohns"
            },
            {
                "Christopher Callagan": "https://github.com/ThanksSkeleton"
            },
            {
                "Joshua Suttenberg": "https://devfolio.co/@JoshSuttenberg"
            },
            {
                "Dominic Letz": "https://github.com/dominicletz"
            }
        ],
        "description": "Howdy, Partner. \"Texas Hide-Em\" our brand-new, fully decentralized poker\nplatform for onchain poker enthusiasts.\n\nBy leveraging the Oasis Sapphire chain for confidentiality and randomness on\nthe contract side, and hosting the dapp webpage directly on ethstorage, we\npresent a poker dapp that has neither centralized frontend, nor a centralized\nbackend, only a fully decentralized contract. (Whip Sound Effect)\n\nIf you have been playing online poker regularly, you can remember the scandals\nwith Absolute Poker or Ultimate Bet, where cheating superusers could view\nother player's cards. Our solution eradicates the superuser dilemma with\nconfidential computing, keeping all cards provably secret until the showdown.\n(Good Bad and Ugly Theme Riff)\n\nThis is not just poker; it's the future of online gaming, combining privacy,\nsecurity, and fairness for all players.\n\nWelcome to \"Texas Hide-Em,\" Hide-em high at the mile high city, Denver,\nYeeeeeehaw.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript"
        ],
        "tags": [
            "ETHDenver 2024",
            "Hackathon",
            "RNG"
        ],
        "codeUrl": "https://github.com/ThanksSkeleton/ethdenver_holdem",
        "demoUrl": "https://poker.w3q.w3q-g.w3link.io",
        "created": "2024-02-24T00:00:00.000Z",
        "lastUpdated": "2024-03-06T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/texas-hideem/screenshots/01-join-game.jpeg",
            "/projects/texas-hideem/screenshots/02-join-game2.jpeg",
            "/projects/texas-hideem/screenshots/03-start.jpeg",
            "/projects/texas-hideem/screenshots/04-gameplay.jpeg"
        ],
        "slug": "texas-hideem"
    },
    {
        "name": "Treasure Hunt",
        "authors": [
            {
                "Rahul Srivastava": "https://rotatingcanvas.com/"
            }
        ],
        "description": "A P2P treasure hunt where player 1 can hide a treasure in 8x8 maze and player\n2 gets n number of moves to find the treasure. After each move, contract gives\nhint to the player 2 if they are farther/nearer/at same distance from the\ntreasure. Player gets the option to bet some ROSE coins where winner gets the\ncombined money in the pot minus the development fee.\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "TypeScript",
            "Solidity"
        ],
        "license": "Apache-2.0",
        "tags": [
            "P4W3",
            "Hackathon",
            "React"
        ],
        "codeUrl": "https://github.com/rotcan/oasis-treasure-hunt",
        "demoUrl": "https://rotcan.github.io/oasis-treasure-hunt/",
        "tutorials": [
            {
                "Video demo": "https://youtu.be/LwssTDR21Vw"
            }
        ],
        "created": "2023-09-23T00:00:00.000Z",
        "lastUpdated": "2023-09-29T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/treasure-hunt/screenshots/01-game.png"
        ],
        "slug": "treasure-hunt"
    },
    {
        "name": "Zeo Kuessr",
        "authors": [
            {
                "Priyansh Rathi": "https://github.com/techiepriyansh"
            },
            {
                "Mayank Mittal": "https://github.com/MayankMittal1"
            },
            {
                "Anshul Singh": "https://github.com/levihackerman-102"
            }
        ],
        "description": "GeoGuessr but decentralized and poker-ified, have fun competing against others\nby betting on how well you know the world.\n\nGeoGuessr is an exciting and educational game that challenges players to\nexplore random locations on a map and guess where they are, blending geography\nknowledge with the thrill of discovery. It's a fun way to learn about the\nworld while competing against others or testing your own skills.\n\nZeoKuessr enhances this experience by introducing a competitive edge through\ncrypto staking, where players can wager on their geographical knowledge. The\nintegration of zero-knowledge proofs (ZK) and trusted execution environments\n(TEE) ensures a fair, tamper-proof environment, making the game even more\nengaging by adding transparency and trust to the competition. It’s a\nnext-level evolution of GeoGuessr for those looking for both fun and fairness\nin their gameplay.\n\nCheck out more on the [EthGlobal project page](https://ethglobal.com/showcase/zeokuessr-69vv0).\n",
        "paratimes": [
            "sapphire"
        ],
        "languages": [
            "Solidity",
            "TypeScript",
            "Rust"
        ],
        "tags": [
            "ROFL",
            "Vue",
            "ETHGlobal Singapore 2024",
            "Hackathon"
        ],
        "codeUrl": "https://github.com/techiepriyansh/ZeoKuessr",
        "tutorials": [
            {
                "Video demo": "https://stream.mux.com/UsyO7X02dfxp3rKj01cFv21lWudaThkATmE7VIlgblIhc/high.mp4"
            }
        ],
        "created": "2024-09-21T00:00:00.000Z",
        "lastUpdated": "2024-09-22T00:00:00.000Z",
        "maintainedByOasis": false,
        "screenshots": [
            "/projects/zeo-kuessr/screenshots/01-gameplay.jpg",
            "/projects/zeo-kuessr/screenshots/02-new-game.jpg"
        ],
        "slug": "zeo-kuessr"
    }
]
